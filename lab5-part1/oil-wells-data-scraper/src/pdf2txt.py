import os
from io import BytesIO

import fitz
import pdfplumber
from oauth2client.service_account import ServiceAccountCredentials
from pydrive2.auth import GoogleAuth
from pydrive2.drive import GoogleDrive
from settings import Path, config, get_logger
from tqdm import tqdm

logger = get_logger(__file__)


def get_gdrive_auth(service_account_json_key_path):
    """Authenticate using the application default credentials generated by gcloud"""
    gauth = GoogleAuth()
    credentials = ServiceAccountCredentials.from_json_keyfile_name(
        service_account_json_key_path, scopes=["https://www.googleapis.com/auth/drive"]
    )
    gauth.credentials = credentials
    gauth.ServiceAuth()
    return gauth


def process_pdf(file, drive):
    filename = file["title"].split(".")[0]
    filepath = os.path.join(Path.data_text_dir, f"{filename}.txt")

    if not os.path.exists(filepath):
        if file["title"].endswith(".pdf"):
            pdf_file = drive.CreateFile({"id": file["id"]})
            logger.info(f"Downloading '{file['title']}' to buffer memory...")
            pdf_bytes = pdf_file.GetContentIOBuffer().read()

            logger.info(f"Processing PDF '{file['title']}' with pdfplumber...")
            # Open the PDF file using pdfplumber
            with pdfplumber.open(BytesIO(pdf_bytes)) as pdf:
                text = ""
                for page in pdf.pages:
                    text += page.extract_text()

            with open(filepath, "w", encoding="utf-8") as f:
                f.write(text)

            logger.info(f"Processing PDF '{file['title']}' with PyMuPDF...")
            # Open file with PyMuPDF
            with fitz.open(stream=BytesIO(pdf_bytes), filetype="pdf") as pdf:
                text = ""
                for page_number in range(pdf.page_count):
                    page = pdf.load_page(page_number)
                    text += page.get_text()

            with open(filepath, "a", encoding="utf-8") as f:
                f.write(text)

            logger.info(f"Saved extract text to '{os.path.relpath(filepath)}'.")
    logger.info(f"'{os.path.relpath(filepath)}' already exists.")


def process_pdfs():
    # Initialize GoogleDrive object without authentication
    gauth = get_gdrive_auth(Path.gcp_service_account_key)
    drive = GoogleDrive(gauth)

    # Folder ID from the shared link
    folder_id = config.GDRIVE_DATA_FOLDER_ID

    # List all files in the folder
    file_list = drive.ListFile({"q": f"'{folder_id}' in parents and trashed=false"}).GetList()
    file_list = [{"id": file_dict["id"], "title": file_dict["title"]} for file_dict in file_list]

    for fileitem in tqdm(file_list[::-1]):
        process_pdf(fileitem, drive)
